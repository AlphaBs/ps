// https://www.acmicpc.net/problem/1660

#define SMC_COUNT 120
int smc[] = {
    1,
    4,
    10,
    20,
    35,
    56,
    84,
    120,
    165,
    220,
    286,
    364,
    455,
    560,
    680,
    816,
    969,
    1140,
    1330,
    1540,
    1771,
    2024,
    2300,
    2600,
    2925,
    3276,
    3654,
    4060,
    4495,
    4960,
    5456,
    5984,
    6545,
    7140,
    7770,
    8436,
    9139,
    9880,
    10660,
    11480,
    12341,
    13244,
    14190,
    15180,
    16215,
    17296,
    18424,
    19600,
    20825,
    22100,
    23426,
    24804,
    26235,
    27720,
    29260,
    30856,
    32509,
    34220,
    35990,
    37820,
    39711,
    41664,
    43680,
    45760,
    47905,
    50116,
    52394,
    54740,
    57155,
    59640,
    62196,
    64824,
    67525,
    70300,
    73150,
    76076,
    79079,
    82160,
    85320,
    88560,
    91881,
    95284,
    98770,
    102340,
    105995,
    109736,
    113564,
    117480,
    121485,
    125580,
    129766,
    134044,
    138415,
    142880,
    147440,
    152096,
    156849,
    161700,
    166650,
    171700,
    176851,
    182104,
    187460,
    192920,
    198485,
    204156,
    209934,
    215820,
    221815,
    227920,
    234136,
    240464,
    246905,
    253460,
    260130,
    266916,
    273819,
    280840,
    287980,
    295240,
};

#include <iostream>
#include <cstdio>
#include <algorithm>

using namespace std;

int dp[333'333];

int find(int n)
{   
    if (n < 0)
        return 333'333;
    if (n == 0)
        return 0;
    
    int& ret = dp[n];
    if (ret != -1)
        return ret;

    ret = 333'333;
    for (int i = 0; i < SMC_COUNT; i++)
    {
        ret = min(ret, find(n - smc[i]) + 1);
    }
    return ret;
}

int main() 
{
    for (int i = 0; i < 333'333; i++)
    {
        dp[i] = -1;
    }

    ios::sync_with_stdio(false);
    cin.tie(NULL);
    cout.tie(NULL);
    
    int n;
    cin >> n;
    cout << find(n);

    return 0;
}